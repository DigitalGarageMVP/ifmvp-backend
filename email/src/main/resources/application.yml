server:
  port: ${SERVER_PORT:8081}
  servlet:
    context-path: /
  allowed-origins: ${ALLOWED_ORIGINS:http://localhost:3000}

spring:
  application:
    name: email-service
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST:20.249.204.253}:${POSTGRES_PORT:5432}/${POSTGRES_COMMAND_DB:emaildb}
    username: ${POSTGRES_USER:postgres}
    password: ${POSTGRES_PASSWORD:Passw0rd}
    driver-class-name: org.postgresql.Driver
  # 다중 데이터소스 설정
  datasources:
    command:
      jdbcUrl: jdbc:postgresql://${POSTGRES_HOST:20.249.204.253}:${POSTGRES_PORT:5432}/${POSTGRES_COMMAND_DB:emaildb}
      username: ${POSTGRES_USER:postgres}
      password: ${POSTGRES_PASSWORD:Passw0rd}
      driver-class-name: org.postgresql.Driver
    query:
      jdbcUrl: jdbc:postgresql://${POSTGRES_HOST:20.249.204.253}:${POSTGRES_PORT:5432}/${POSTGRES_QUERY_DB:emailviews}
      username: ${POSTGRES_USER:postgres}
      password: ${POSTGRES_PASSWORD:Passw0rd}
      driver-class-name: org.postgresql.Driver

      hikari:
        maximum-pool-size: 5
        minimum-idle: 2
        idle-timeout: 30000
        connection-timeout: 20000
  jpa:
    hibernate:
      ddl-auto: ${JPA_DDL_AUTO:update}
    show-sql: ${JPA_SHOW_SQL:true}
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
        hbm2ddl:
          auto: create

azure:
  storage:
    connection-string: ${AZURE_STORAGE_CONNECTION_STRING:DefaultEndpointsProtocol=https;AccountName=ifmvp;AccountKey=0hBdcnBFzZwXRPjGeF8C8U/cbh4X4uK06IWCUHtTeTy4q64t8LlpXi9D8Xcxp5enTpm6aVg8XCau+AStexwJww==;EndpointSuffix=core.windows.net}
    container:
      attachments: ${AZURE_CONTAINER_ATTACHMENTS:email-attachments}
  servicebus:
    connection-string: ${AZURE_SERVICEBUS_CONNECTION_STRING:Endpoint=sb://sb-if-ifmvp.servicebus.windows.net/;SharedAccessKeyName=if-backend;SharedAccessKey=IicFGjdVwp8YlkSCKYgRyOZ7cubKSvHJG+ASbH5ah9M=}
    queue:
      email-events: ${AZURE_QUEUE_EMAIL_EVENTS:email-events}
      email-open-events: ${AZURE_QUEUE_EMAIL_EVENTS:email-events}
      attachment-click-events: ${AZURE_QUEUE_OPEN_EVENTS:email-open-events}

mock:
  delivery:
    enabled: false
    service-url: ${MOCK_DELIVERY_URL:http://localhost:8082}

jwt:
  secret-key: ${JWT_SECRET_KEY:defaultSecretKey}

springdoc:
  swagger-ui:
    path: /swagger-ui.html
    operations-sorter: method
  api-docs:
    path: /api-docs

logging:
  level:
    com.email.email: ${LOG_LEVEL:DEBUG}

management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
      probes:
        enabled: true
  health:
    livenessState:
      enabled: true
    readinessState:
      enabled: true